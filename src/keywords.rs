pub const KEYWORD_SYMBOLS: [&'static str; 246] = [
    "accept_on",
    "alias",
    "always",
    "always_comb",
    "always_ff",
    "always_latch",
    "and",
    "assert",
    "assign",
    "assume",
    "automatic",
    "before",
    "begin",
    "bind",
    "bins",
    "binsof",
    "bit",
    "break",
    "buf",
    "bufif0",
    "bufif1",
    "byte",
    "case",
    "casex",
    "casez",
    "cell",
    "chandle",
    "checker",
    "class",
    "clocking",
    "cmos",
    "config",
    "const",
    "constraint",
    "context",
    "continue",
    "cover",
    "covergroup",
    "coverpoint",
    "cross",
    "deassign",
    "default",
    "defparam",
    "design",
    "disable",
    "do",
    "edge",
    "else",
    "end",
    "endcase",
    "endchecker",
    "endclass",
    "endclocking",
    "endconfig",
    "endfunction",
    "endgenerate",
    "endgroup",
    "endinterface",
    "endmodule",
    "endpackage",
    "endprimitive",
    "endprogram",
    "endproperty",
    "endspecify",
    "endsequence",
    "endtable",
    "endtask",
    "enum",
    "event",
    "eventually",
    "expect",
    "export",
    "extends",
    "extern",
    "final",
    "first_match",
    "for",
    "force",
    "foreach",
    "forever",
    "fork",
    "forkjoin",
    "function",
    "generate",
    "genvar",
    "global",
    "highz0",
    "highz1",
    "if",
    "iff",
    "ifnone",
    "ignore_bins",
    "illegal_bins",
    "implements",
    "implies",
    "import",
    "incdir",
    "include",
    "initial",
    "inout",
    "input",
    "instance",
    "int",
    "integer",
    "interconnect",
    "interface",
    "intersect",
    "join",
    "join_any",
    "join_none",
    "large",
    "let",
    "liblist",
    "library",
    "local",
    "localparam",
    "logic",
    "longint",
    "macromodule",
    "matches",
    "medium",
    "modport",
    "module",
    "nand",
    "negedge",
    "nettype",
    "new",
    "nexttime",
    "nmos",
    "nor",
    "noshowcancelled",
    "not",
    "notif0",
    "notif1",
    "null",
    "or",
    "output",
    "package",
    "packed",
    "parameter",
    "pmos",
    "posedge",
    "primitive",
    "priority",
    "program",
    "property",
    "protected",
    "pull0",
    "pull1",
    "pulldown",
    "pullup",
    "pulsestyle_ondetect",
    "pulsestyle_onevent",
    "pure",
    "rand",
    "randc",
    "randcase",
    "randsequence",
    "rcmos",
    "real",
    "realtime",
    "ref",
    "reg",
    "reject_on",
    "release",
    "repeat",
    "restrict",
    "return",
    "rnmos",
    "rpmos",
    "rtran",
    "rtranif0",
    "rtranif1",
    "s_always",
    "s_eventually",
    "s_nexttime",
    "s_until",
    "s_until_with",
    "scalared",
    "sequence",
    "shortint",
    "shortreal",
    "showcancelled",
    "signed",
    "small",
    "soft",
    "solve",
    "specify",
    "specparam",
    "static",
    "string",
    "strong",
    "strong0",
    "strong1",
    "struct",
    "super",
    "supply0",
    "supply1",
    "sync_accept_on",
    "sync_reject_on",
    "table",
    "tagged",
    "task",
    "this",
    "throughout",
    "time",
    "timeprecision",
    "timeunit",
    "tran",
    "tranif0",
    "tranif1",
    "tri",
    "tri0",
    "tri1",
    "triand",
    "trior",
    "trireg",
    "type",
    "typedef",
    "union",
    "unique",
    "unique0",
    "unsigned",
    "until",
    "until_with",
    "untyped",
    "use",
    "uwire",
    "var",
    "vectored",
    "virtual",
    "void",
    "wait",
    "wait_order",
    "wand",
    "weak",
    "weak0",
    "weak1",
    "while",
    "wildcard",
    "wire",
    "with",
    "within",
    "wor",
    "xnor",
    "xor",
];

#[derive(Debug, PartialEq, Eq)]
pub enum Keyword {
    AcceptOn,
    Alias,
    Always,
    AlwaysComb,
    AlwaysFF,
    AlwaysLatch,
    And,
    Assert,
    Assign,
    Assume,
    Automatic,
    Before,
    Begin,
    Bind,
    Bins,
    Binsof,
    Bit,
    Break,
    Buf,
    Bufif0,
    Bufif1,
    Byte,
    Case,
    Casex,
    Casez,
    Cell,
    Chandle,
    Checker,
    Class,
    Clocking,
    Cmos,
    Config,
    Const,
    Constraint,
    Context,
    Continue,
    Cover,
    Covergroup,
    Coverpoint,
    Cross,
    Deassign,
    Default,
    Defparam,
    Design,
    Disable,
    Do,
    Edge,
    Else,
    End,
    Endcase,
    Endchecker,
    Endclass,
    Endclocking,
    Endconfig,
    Endfunction,
    Endgenerate,
    Endgroup,
    Endinterface,
    Endmodule,
    Endpackage,
    Endprimitive,
    Endprogram,
    Endproperty,
    Endspecify,
    Endsequence,
    Endtable,
    Endtask,
    Enum,
    Event,
    Eventually,
    Expect,
    Export,
    Extends,
    Extern,
    Final,
    FirstMatch,
    For,
    Force,
    Foreach,
    Forever,
    Fork,
    Forkjoin,
    Function,
    Generate,
    Genvar,
    Global,
    Highz0,
    Highz1,
    If,
    Iff,
    Ifnone,
    IgnoreBins,
    IllegalBins,
    Implements,
    Implies,
    Import,
    Incdir,
    Include,
    Initial,
    Inout,
    Input,
    Instance,
    Int,
    Integer,
    Interconnect,
    Interface,
    Intersect,
    Join,
    JoinAny,
    JoinNone,
    Large,
    Let,
    Liblist,
    Library,
    Local,
    Localparam,
    Logic,
    Longint,
    Macromodule,
    Matches,
    Medium,
    Modport,
    Module,
    Nand,
    Negedge,
    Nettype,
    New,
    Nexttime,
    Nmos,
    Nor,
    Noshowcancelled,
    Not,
    Notif0,
    Notif1,
    Null,
    Or,
    Output,
    Package,
    Packed,
    Parameter,
    Pmos,
    Posedge,
    Primitive,
    Priority,
    Program,
    Property,
    Protected,
    Pull0,
    Pull1,
    Pulldown,
    Pullup,
    PulsestyleOndetect,
    PulsestyleOnevent,
    Pure,
    Rand,
    Randc,
    Randcase,
    Randsequence,
    Rcmos,
    Real,
    Realtime,
    Ref,
    Reg,
    RejectOn,
    Release,
    Repeat,
    Restrict,
    Return,
    Rnmos,
    Rpmos,
    Rtran,
    Rtranif0,
    Rtranif1,
    SAlways,
    SEventually,
    SNexttime,
    SUntil,
    SUntilWith,
    Scalared,
    Sequence,
    Shortint,
    Shortreal,
    Showcancelled,
    Signed,
    Small,
    Soft,
    Solve,
    Specify,
    Specparam,
    Static,
    String,
    Strong,
    Strong0,
    Strong1,
    Struct,
    Super,
    Supply0,
    Supply1,
    SyncAcceptOn,
    SyncRejectOn,
    Table,
    Tagged,
    Task,
    This,
    Throughout,
    Time,
    Timeprecision,
    Timeunit,
    Tran,
    Tranif0,
    Tranif1,
    Tri,
    Tri0,
    Tri1,
    Triand,
    Trior,
    Trireg,
    Type,
    Typedef,
    Union,
    Unique,
    Unique0,
    Unsigned,
    Until,
    UntilWith,
    Untyped,
    Use,
    Uwire,
    Var,
    Vectored,
    Virtual,
    Void,
    Wait,
    WaitOrder,
    Wand,
    Weak,
    Weak0,
    Weak1,
    While,
    Wildcard,
    Wire,
    With,
    Within,
    Wor,
    Xnor,
    Xor,
}

